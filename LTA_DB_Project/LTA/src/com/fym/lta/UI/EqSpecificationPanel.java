
package com.fym.lta.UI;

import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.EquipSpecificationBao;
import com.fym.lta.BAO.RoleScreenBao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DAO.RoleScreenDao;
import com.fym.lta.DTO.DepartmentDto;
import com.fym.lta.DTO.EquipSpecificationDto;
import com.fym.lta.DTO.UserDto;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;

import java.util.List;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Nada El-Gammal
 */

public class EqSpecificationPanel extends javax.swing.JPanel
{
  @SuppressWarnings({ "compatibility:5169086565475610956",
      "oracle.jdeveloper.java.serialversionuid-stale" })
  private static final long serialVersionUID = 1L;

  /**Definitions*/
  //define user dto as "user"
  private static UserDto user;
  //identify object of EquipSpecificationBao
  private static EquipSpecificationBao business;
  // create object from EquipSpecificationDto
  private static EquipSpecificationDto eq_spec;


  /** Creates new form EqSpecificationJPanel */
  public EqSpecificationPanel(UserDto user)
  {
    try
      {
        //set taken user object to the private one
        EqSpecificationPanel.user = user;

        //create object from EquipmentSpecificationBaoImpl
        business = new BaoFactory().createEquipmentSpecificationBao(user);

        //set panel components
        initComponents();

        //use user access method to check user validity on this screen
        userAccess();

        /* get specs data using view all method in bao
         * paint specs table for the result data*/
        setTableModel(business.listAll());

      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
  }


  /** set equipment specifications table model
   * @param equipment specifications */
  private void setTableModel(List<EquipSpecificationDto> eq_specif)
  {
    int size = 0; //for table row size

    //if given list not empty or null
    if(eq_specif!=null&&!eq_specif.isEmpty())
      {
        size = eq_specif.size();
      }


    /*this (2D) array of objects for table model
     *the first D for rows, second for columns */
    Object[][] eqSpArr = new Object[size][3];
    
    for(int i = 0; i<size; i++) //for each row
      {
        eqSpArr[i][0] = eq_specif.get(i).getId();    //set id
        eqSpArr[i][1] = eq_specif.get(i).getName();  //set name 
        eqSpArr[i][2] = eq_specif.get(i).getValue(); //set value
      }

    //set table model using this array
    EqSpecificationTable.setModel(new javax.swing.table.DefaultTableModel(eqSpArr,
        new String[] { "ID", "Name", "Value" }));


    //change header color
    EqSpecificationTable.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer()
    {

      @Override
      public Component getTableCellRendererComponent(JTable table,
        Object value, boolean isSelected, boolean hasFocus, int row,
        int column)
      {

        JLabel label =
          (JLabel) super.getTableCellRendererComponent(table, value,
          isSelected, hasFocus, row, column);
        //chage header background
        label.setBackground(Color.decode("#0081D3"));
        //change font color
        label.setForeground(Color.white);

        return label;
      }
    });

    //label under tabel show specs count viewed in table
    no_of_rows.setText("Table result: "+
      Integer.toString(EqSpecificationTable.getRowCount())+
      "  specifications");
  }


  /**This method use to check user validity on this screen
   * if user has full access or viewonly access*/
  private void userAccess()
  {

    //set user screen name to "Equipment Specification" to make check on it
    user.setScreen_name("Equipment Specification");

    //define role screen bao
    RoleScreenBao roleScreenBao =
      new BaoFactory().createRoleScreenBao(user);

    //if user has viewonly access to this screen
    if(roleScreenBao.viewonly(user))
      {
        //hide all edits components
        EditPanel.setVisible(false);
      }
    
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  private void initComponents()//GEN-BEGIN:initComponents
  {

    jScrollPane1 = new javax.swing.JScrollPane();
    EqSpecificationTable = new javax.swing.JTable();
    searchText = new javax.swing.JTextField();
    no_of_rows = new java.awt.Label();
    EditPanel = new javax.swing.JPanel();
    IdLabel = new javax.swing.JLabel();
    CodeLabel = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    IdText = new javax.swing.JTextField();
    nameText = new javax.swing.JTextField();
    valueText = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    savePanel = new javax.swing.JPanel();
    Save = new javax.swing.JButton();
    deletePanel = new javax.swing.JPanel();
    deleteButton = new javax.swing.JButton();
    clearPanel = new javax.swing.JPanel();
    clear = new javax.swing.JButton();
    jLabel8 = new javax.swing.JLabel();
    jSeparator2 = new javax.swing.JSeparator();
    refreshPanel = new javax.swing.JPanel();
    refreshButton = new javax.swing.JButton();
    searchPanel = new javax.swing.JPanel();
    searchButton = new javax.swing.JButton();

    setBackground(new java.awt.Color(245, 245, 245));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    EqSpecificationTable.setAutoCreateRowSorter(true);
    EqSpecificationTable.setFont(new java.awt.Font("AGA Cordoba V3 قرطبة", 0, 18)); // NOI18N
    EqSpecificationTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null}
      },
      new String []
      {
        "ID", "Name", "Value"
      }
    )
    {
      Class[] types = new Class []
      {
        java.lang.Integer.class, java.lang.String.class, java.lang.String.class
      };
      boolean[] canEdit = new boolean []
      {
        false, false, false
      };

      public Class getColumnClass(int columnIndex)
      {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex)
      {
        return canEdit [columnIndex];
      }
    });
    EqSpecificationTable.setFillsViewportHeight(true);
    EqSpecificationTable.setRowHeight(25);
    EqSpecificationTable.setSelectionBackground(new java.awt.Color(0, 153, 204));
    EqSpecificationTable.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        EqSpecificationTableMouseClicked(evt);
      }
    });
    EqSpecificationTable.addKeyListener(new java.awt.event.KeyAdapter()
    {
      public void keyPressed(java.awt.event.KeyEvent evt)
      {
        EqSpecificationTableKeyPressed(evt);
      }
    });
    jScrollPane1.setViewportView(EqSpecificationTable);
    if (EqSpecificationTable.getColumnModel().getColumnCount() > 0)
    {
      EqSpecificationTable.getColumnModel().getColumn(0).setHeaderValue("ID");
      EqSpecificationTable.getColumnModel().getColumn(1).setHeaderValue("Name");
      EqSpecificationTable.getColumnModel().getColumn(2).setHeaderValue("Value");
    }

    add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 96, 710, 770));

    searchText.setFont(new java.awt.Font("AGA Cordoba V3 قرطبة", 0, 18)); // NOI18N
    searchText.setText("Enter Text to Search");
    searchText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    searchText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        searchTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        searchTextFocusLost(evt);
      }
    });
    searchText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        searchTextActionPerformed(evt);
      }
    });
    add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 27, 620, 50));

    no_of_rows.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
    no_of_rows.setForeground(new java.awt.Color(135, 135, 135));
    no_of_rows.setText("no of rows");
    add(no_of_rows, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 860, 200, 40));

    EditPanel.setBackground(new java.awt.Color(245, 245, 245));
    EditPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    IdLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    IdLabel.setForeground(new java.awt.Color(0, 51, 204));
    IdLabel.setText("ID");
    EditPanel.add(IdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 30, 40));

    CodeLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    CodeLabel.setForeground(new java.awt.Color(0, 51, 204));
    CodeLabel.setText("Name");
    EditPanel.add(CodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 296, -1, 30));

    jLabel3.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(0, 51, 204));
    jLabel3.setText("Value");
    EditPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 386, -1, 30));

    IdText.setFont(new java.awt.Font("AGA Cordoba V3 قرطبة", 0, 18)); // NOI18N
    IdText.setText("Enter ID");
    IdText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    IdText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        IdTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        IdTextFocusLost(evt);
      }
    });
    IdText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        IdTextActionPerformed(evt);
      }
    });
    EditPanel.add(IdText, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 230, 580, 50));

    nameText.setFont(new java.awt.Font("AGA Cordoba V3 قرطبة", 0, 18)); // NOI18N
    nameText.setText("Enter Specification Name");
    nameText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    nameText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        nameTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        nameTextFocusLost(evt);
      }
    });
    nameText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        nameTextActionPerformed(evt);
      }
    });
    EditPanel.add(nameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 580, 50));

    valueText.setFont(new java.awt.Font("AGA Cordoba V3 قرطبة", 0, 18)); // NOI18N
    valueText.setText("Enter Specification Value");
    valueText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    valueText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        valueTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        valueTextFocusLost(evt);
      }
    });
    EditPanel.add(valueText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 580, 50));

    jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_maintenance_128px.png"))); // NOI18N
    EditPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

    savePanel.setBackground(new java.awt.Color(0, 129, 211));

    Save.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
    Save.setForeground(new java.awt.Color(255, 255, 255));
    Save.setText("Insert");
    Save.setBorderPainted(false);
    Save.setContentAreaFilled(false);
    Save.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        SaveMouseMoved(evt);
      }
    });
    Save.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        SaveMouseExited(evt);
      }
    });
    Save.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        SaveActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout savePanelLayout = new javax.swing.GroupLayout(savePanel);
    savePanel.setLayout(savePanelLayout);
    savePanelLayout.setHorizontalGroup(
      savePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
    );
    savePanelLayout.setVerticalGroup(
      savePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    EditPanel.add(savePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 110, -1));

    deletePanel.setBackground(new java.awt.Color(0, 129, 211));

    deleteButton.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
    deleteButton.setForeground(new java.awt.Color(255, 255, 255));
    deleteButton.setText("Delete");
    deleteButton.setBorderPainted(false);
    deleteButton.setContentAreaFilled(false);
    deleteButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        deleteButtonMouseMoved(evt);
      }
    });
    deleteButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        deleteButtonMouseExited(evt);
      }
    });
    deleteButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        deleteButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout deletePanelLayout = new javax.swing.GroupLayout(deletePanel);
    deletePanel.setLayout(deletePanelLayout);
    deletePanelLayout.setHorizontalGroup(
      deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
    );
    deletePanelLayout.setVerticalGroup(
      deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    EditPanel.add(deletePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 500, -1, -1));

    clearPanel.setBackground(new java.awt.Color(0, 129, 211));

    clear.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
    clear.setForeground(new java.awt.Color(255, 255, 255));
    clear.setText("Clear");
    clear.setBorderPainted(false);
    clear.setContentAreaFilled(false);
    clear.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        clearMouseMoved(evt);
      }
    });
    clear.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        clearMouseExited(evt);
      }
    });
    clear.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        clearActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout clearPanelLayout = new javax.swing.GroupLayout(clearPanel);
    clearPanel.setLayout(clearPanelLayout);
    clearPanelLayout.setHorizontalGroup(
      clearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
    );
    clearPanelLayout.setVerticalGroup(
      clearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    EditPanel.add(clearPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 100, -1));

    add(EditPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 110, 610, 750));

    jLabel8.setBackground(new java.awt.Color(231, 78, 123));
    jLabel8.setFont(new java.awt.Font("VIP Rawy Regular", 0, 36)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(231, 78, 123));
    jLabel8.setText("Equipment specification");
    add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 30, 460, 90));
    add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 100, 620, 20));

    refreshPanel.setBackground(new java.awt.Color(0, 129, 211));

    refreshButton.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
    refreshButton.setForeground(new java.awt.Color(255, 255, 255));
    refreshButton.setText("Refresh ");
    refreshButton.setBorderPainted(false);
    refreshButton.setContentAreaFilled(false);
    refreshButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        refreshButtonMouseMoved(evt);
      }
    });
    refreshButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        refreshButtonMouseExited(evt);
      }
    });
    refreshButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        refreshButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout refreshPanelLayout = new javax.swing.GroupLayout(refreshPanel);
    refreshPanel.setLayout(refreshPanelLayout);
    refreshPanelLayout.setHorizontalGroup(
      refreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(refreshPanelLayout.createSequentialGroup()
        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    refreshPanelLayout.setVerticalGroup(
      refreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    add(refreshPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 880, 110, 50));

    searchPanel.setBackground(new java.awt.Color(0, 129, 211));

    searchButton.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
    searchButton.setForeground(new java.awt.Color(255, 255, 255));
    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_search_26px.png"))); // NOI18N
    searchButton.setBorderPainted(false);
    searchButton.setContentAreaFilled(false);
    searchButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        searchButtonMouseMoved(evt);
      }
    });
    searchButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        searchButtonMouseExited(evt);
      }
    });
    searchButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        searchButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
    searchPanel.setLayout(searchPanelLayout);
    searchPanelLayout.setHorizontalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
    );
    searchPanelLayout.setVerticalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 80, -1));
  }//GEN-END:initComponents


    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained

    // delete default text from textfield when textfield is selected
    if(searchText.getText().equalsIgnoreCase("Enter Text to Search"))
      searchText.setText("");

    //set new border to change border color
    searchText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_searchTextFocusGained

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost
   
    // reset text of textfield to its default when its focus is lost
    if(searchText.getText().trim().equalsIgnoreCase(""))
      searchText.setText("Enter Text to Search");

    //set new border to reset border color
    searchText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_searchTextFocusLost

    private void IdTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusGained

    // delete text from textfield when textfield is selected
    if(IdText.getText().equalsIgnoreCase("Enter ID"))
      IdText.setText("");

    //set new border to reset border color
    IdText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_IdTextFocusGained

    private void IdTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusLost

    // reset text of textfield to its default when its focus is lost
    if(IdText.getText().trim().equalsIgnoreCase(""))
      IdText.setText("Enter ID");

    //set new border to reset border color
    IdText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_IdTextFocusLost

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
    //implementation of search button
    try
      {
        //get entered text
        String search = searchText.getText();
      
        // Check if the Search field is not empty
        if(!(search.equals("")))
          {
            
            eq_spec = new EquipSpecificationDto(); //set new object
           
            //get the input search text into search attribute in departemt dto object
            eq_spec.setSearch(searchText.getText());

            // get the result set from bao
            List<EquipSpecificationDto> search_list = business.searchFor(eq_spec);
            
            if(search_list!=null)
              {
                // reset and repaint the table with the returned search list
                setTableModel(search_list);
                EqSpecificationTable.repaint();
              }
            else
              {
                //if there is no result set show message to tell user that
                JOptionPane.showMessageDialog(null,
                  "There is no search result for: "+searchText.getText(),
                  "Invalid search", 1);
              }
          }
        else
          //Show message tell user that Search Field is empty
          JOptionPane.showMessageDialog(null, "Search field is empty",
            "Invalid Input!", JOptionPane.ERROR_MESSAGE);
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
            
    }//GEN-LAST:event_searchTextActionPerformed

    private void nameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFocusGained

    // delete text from textfield when textfield is selected
    if(nameText.getText().equalsIgnoreCase("Enter Specification Name"))
      nameText.setText("");

    //set new border to change border color
    nameText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_nameTextFocusGained

    private void nameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFocusLost

    // reset text of textfield to its default when its focus is lost
    if(nameText.getText().trim().equalsIgnoreCase(""))
      nameText.setText("Enter Specification Name");

    //set new border to reset border color
    nameText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_nameTextFocusLost

    private void valueTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valueTextFocusGained
    
    // delete text from textfield when textfield is selected
    if(valueText.getText().equalsIgnoreCase("Enter Specification Value"))
      valueText.setText("");

    //set new border to change border color
    valueText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_valueTextFocusGained

    private void valueTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valueTextFocusLost
   
    // reset text of textfield to its default when its focus is lost
    if(valueText.getText().trim().equalsIgnoreCase(""))
      valueText.setText("Enter Specification Value");

    //set new border to reset border color
    valueText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_valueTextFocusLost

    private void EqSpecificationTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EqSpecificationTableKeyPressed
   
    /** set text of textfields by the data of the keypressed row in table*/
    if(evt.getExtendedKeyCode()==KeyEvent.VK_UP||
      evt.getExtendedKeyCode()==KeyEvent.VK_DOWN)
      {
        try
          {

            int row =
              EqSpecificationTable.getSelectedRow(); //get selected row

            //Because "getSelectedRow()" give the previous selected row
            if(evt.getExtendedKeyCode()==KeyEvent.VK_UP)
              row--; //for up key decrement
            else if(evt.getExtendedKeyCode()==KeyEvent.VK_DOWN)
              row++; // down key increment

            //unable id text box,as user cant't update it(PK)
            IdText.setEnabled(false);
            Save.setText("Update"); //set save button text "Update"

            IdText.setText(EqSpecificationTable.getModel().getValueAt(row,
              0).toString()); //set id text
            nameText.setText(EqSpecificationTable.getModel().getValueAt(row,
              1).toString()); //set name text
            valueText.setText(EqSpecificationTable.getModel().getValueAt(row,
              2).toString()); //set value text
          }

        catch(java.lang.ArrayIndexOutOfBoundsException e)
          {
            e.printStackTrace();
          }

        catch(Exception e)
          {
            e.printStackTrace();
          }
      }

    /** delete selected object when press delete */
    if(evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
      {
        try
          {
            //For one selected row in table
            if(EqSpecificationTable.getSelectedRowCount()==1)
              { //Show confirm message
                int reply =
                  JOptionPane.showConfirmDialog(null,
                    "Are you sure to delete this department?\n"+
                    "All things depend on it will be deleted!", "Warning",
                    JOptionPane.YES_NO_OPTION);

                //delete object if user choose yes
                if(reply==JOptionPane.YES_OPTION)
                  {
                    eq_spec = new EquipSpecificationDto(); //set new object

                    //get selected specififcation id from table
                    int id =
                      Integer.parseInt(EqSpecificationTable.getValueAt(EqSpecificationTable.getSelectedRow(),
                          0).toString());
                    eq_spec.setId(id); //set it to eq_spec object


                    if(business.delete(eq_spec)) //if it deleted sucessfilly show message to tell user that
                      {

                        //show message to tell user this
                        JOptionPane.showMessageDialog(null,
                          "Equipment specification has deleted successfully!", "Done",
                          JOptionPane.INFORMATION_MESSAGE);

                        //refresh table
                        setTableModel(business.listAll());
                        EqSpecificationTable.repaint();

                        IdText.setEnabled(true); //set id text enable
                        Save.setText("Insert"); //set save button text to "Insert"

                      }

                    else
                      //if bao method return false (Eq. spec not be deleted)
                      JOptionPane.showMessageDialog(null,
                        "Can't delete object", "Error",
                        JOptionPane.ERROR_MESSAGE);
                  }

              }
            else if(EqSpecificationTable.getSelectedRowCount()==0)
              {
                // if there is no selected row show message to ask user to select a row
                JOptionPane.showMessageDialog(null,
                  "There is no selected row in the table\n\n", "Error",
                  JOptionPane.WARNING_MESSAGE);
              }
            else
              {
                // if there are more than one row selected show message to ask user to select one row
                JOptionPane.showMessageDialog(null,
                  "Please, Select only one row\n\n", "Error",
                  JOptionPane.WARNING_MESSAGE);
              }
          }
        catch(Exception e)
          {
            e.printStackTrace();
          }
      }
    
    
    }//GEN-LAST:event_EqSpecificationTableKeyPressed

    private void EqSpecificationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EqSpecificationTableMouseClicked
   
    /** set text of textfields by the data of the mouse clicked row in tablem */
    
    int row = EqSpecificationTable.getSelectedRow(); //get selected row

    //unable id text box,as user cant't update it(PK)
    IdText.setEnabled(false);
    Save.setText("Update"); //set save button text "Update"

    IdText.setText(EqSpecificationTable.getModel().getValueAt(row,
      0).toString()); //set id text
    nameText.setText(EqSpecificationTable.getModel().getValueAt(row,
      1).toString()); //set name text
    valueText.setText(EqSpecificationTable.getModel().getValueAt(row,
      2).toString()); //set value text
    
    }//GEN-LAST:event_EqSpecificationTableMouseClicked

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
    /** save button implementation */
    //if the set text update
    if(Save.getText().equalsIgnoreCase("Update"))
      update(); //use update method

    else //try insert this specification
      {
        try
          {

            //check validity of data enterd by user using checkValidity method
            if(checkValidity())
              {

                eq_spec = new EquipSpecificationDto(); //set new object
                
                //pass data from textfields to dto object properties
                eq_spec.setId(Integer.parseInt(IdText.getText()));
                eq_spec.setName(nameText.getText());
                eq_spec.setValue(valueText.getText());

                //call insert method from bao and pass the dto object as parameter
                if(business.insert(eq_spec, user))
                  {

                    //show message when method terminated successfully
                    JOptionPane.showMessageDialog(null,
                      "Specification Inserted Successfully");

                    // reset and repaint the table after adding equipment
                    setTableModel(business.listAll());
                    EqSpecificationTable.repaint();

                    //set save button text to "Update"
                    Save.setText("Update");

                    //set id text disable (id can't be edited after insert)
                    IdText.setEnabled(false);

                  }
                else // if it failed it mean this department is already exit
                  {
                    /*so show message to ask user if he want
                    * to update this spec or not*/
                    int reply =
                      JOptionPane.showConfirmDialog(null,
                        "This specification is already exist!\n\n"+
                        "Do you want update it?", "Warning",
                        JOptionPane.YES_NO_OPTION);

                    //update object if user choose yes
                    if(reply==JOptionPane.YES_OPTION)
                      {
                        update(); //use update method
                        Save.setText("Update"); //set save button text to "Update"
                        IdText.setEnabled(false); //set id text disable
                      }
                  }

              }

          }
        catch(Exception e)
          {
            e.printStackTrace();
          }
      }
        
    }//GEN-LAST:event_SaveActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    /** implementation of delete button **/
    //Show confirm message
    int reply =
      JOptionPane.showConfirmDialog(null,
      "Are you sure to delete this department?\n"+
      "All things depend on it will be deleted!", "Warning",
      JOptionPane.YES_NO_OPTION);

    //delete object if user choose yes
    if(reply==JOptionPane.YES_OPTION)
      {

        try
          {
                    
            eq_spec = new EquipSpecificationDto(); //set new object

            //get building id from textbox and set it to the dto object
            eq_spec.setId(Integer.parseInt(IdText.getText()));

            //go to business layer and delete it
            boolean flag = business.delete(eq_spec);

            /*if object has deleted successfully */
            if(flag==true)
              {
                //show message to tell user this
                JOptionPane.showMessageDialog(null,
                  "Equipment specification has deleted successfully!", "Done",
                  JOptionPane.INFORMATION_MESSAGE);

                //refresh table
                setTableModel(business.listAll());
                EqSpecificationTable.repaint();

                IdText.setEnabled(true); //set id text enable
                Save.setText("Insert"); //set save button text to "Insert"
              }
            //else show message to tell user that this object does't exist in database
            else
              JOptionPane.showMessageDialog(null,
                "Equipment specification doesn't exist!", "Not Found",
                JOptionPane.ERROR_MESSAGE);
          }
        catch(Exception e)
          {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,
              "Some Thing went wrong!\nPlease check your entered data. ",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
          }
      }
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
    /** implementation of refresh button **/
    try
      {
        // reset and repaint the table
        setTableModel(business.listAll());
        EqSpecificationTable.repaint();
      
        IdText.setEnabled(true); //enable id text box
        Save.setText("Insert"); //set save button text to "insert"
      
        //set default text for text boxes
        IdText.setText("Enter ID");
        nameText.setText("Enter Specification Name");
        valueText.setText("Enter Specification Value");
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void IdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdTextActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_IdTextActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
      
    /** implementation of search button **/
    try
      {
        //get entered text
        String search = searchText.getText();

        // Check if the Search field is not empty
        if(!(search.equals("Enter Text to Search")))
          {

            eq_spec = new EquipSpecificationDto(); //set new object

            //get the input search text into search attribute in departemt dto object
            eq_spec.setSearch(searchText.getText());

            // get the result set from bao
            List<EquipSpecificationDto> search_list =
              business.searchFor(eq_spec);

            if(search_list!=null)
              {
                // reset and repaint the table with the returned search list
                setTableModel(search_list);
                EqSpecificationTable.repaint();
              }
            else
              {
                //if there is no result set show message to tell user that
                JOptionPane.showMessageDialog(null,
                  "There is no search result for: "+searchText.getText(),
                  "Invalid search", 1);
              }
          }
        else
          //Show message tell user that Search Field is empty
          JOptionPane.showMessageDialog(null, "Search field is empty",
            "Invalid Input!", JOptionPane.ERROR_MESSAGE);
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
        
    }//GEN-LAST:event_searchButtonActionPerformed

  private void clearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearActionPerformed
  {//GEN-HEADEREND:event_clearActionPerformed

    IdText.setEnabled(true); //enable id text box
    Save.setText("Insert"); //set save button text to "insert"

    //set default text for text boxes
    IdText.setText("Enter ID");
    nameText.setText("Enter Specification Name");
    valueText.setText("Enter Specification Value");
    
  }//GEN-LAST:event_clearActionPerformed

  private void searchButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchButtonMouseExited
  {//GEN-HEADEREND:event_searchButtonMouseExited
   
    // reset search panel color
    searchPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_searchButtonMouseExited

  private void refreshButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_refreshButtonMouseExited
  {//GEN-HEADEREND:event_refreshButtonMouseExited

    // reset refresh panel color
    refreshPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_refreshButtonMouseExited

  private void SaveMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseExited
  {//GEN-HEADEREND:event_SaveMouseExited

    // reset save panel color
    savePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_SaveMouseExited

  private void deleteButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_deleteButtonMouseExited
  {//GEN-HEADEREND:event_deleteButtonMouseExited
    
    // reset delete panel color
    deletePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_deleteButtonMouseExited

  private void clearMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseExited
  {//GEN-HEADEREND:event_clearMouseExited
    
    // reset clear panel color
    clearPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_clearMouseExited

  private void SaveMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseMoved
  {//GEN-HEADEREND:event_SaveMouseMoved

    // change save panel color
    savePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_SaveMouseMoved

  private void deleteButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_deleteButtonMouseMoved
  {//GEN-HEADEREND:event_deleteButtonMouseMoved

    // change delete panel color
    deletePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_deleteButtonMouseMoved

  private void clearMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseMoved
  {//GEN-HEADEREND:event_clearMouseMoved

    // change clear panel color
    clearPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_clearMouseMoved

  private void searchButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchButtonMouseMoved
  {//GEN-HEADEREND:event_searchButtonMouseMoved

    // change search panel color
    searchPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_searchButtonMouseMoved

  private void refreshButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_refreshButtonMouseMoved
  {//GEN-HEADEREND:event_refreshButtonMouseMoved

    // change refresh panel color
    refreshPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_refreshButtonMouseMoved

  /**check Validity of entered data
   * @return: True if data is entered correctly (as expected)
   * False when one or more of them entered uncorrectly
   * */
  private boolean checkValidity()
  {

    try 
      {
        /** check for empty entered data */
        //for default id text
        if(IdText.getText().contentEquals("Enter ID"))
          {
            //ask user enter id
            JOptionPane.showMessageDialog(null,
              "Please, enter Specification id", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);

            //throw empty id exception
            throw new IllegalArgumentException("id text is empry");
          }
        //for default value text
        else if(valueText.getText().equalsIgnoreCase("Enter Specification Value")) //for code

          {
            //ask user enter value
            JOptionPane.showMessageDialog(null,
              "Please, enter Specification Value", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);

            //throw empty value exception
            throw new IllegalArgumentException("Specification Value text is empty");
          }
        //for name default text
        else if(nameText.getText().contentEquals("Enter Specification Name")) 
          {
            //ask user enter name
            JOptionPane.showMessageDialog(null,
              "Please, enter specification name", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);

            //throw empty name exception
            throw new IllegalArgumentException("name text is empty");
          }
      
      
    /**  Check validity of id */
    try
      {
        int id = Integer.parseInt(IdText.getText());
        //Check for the entered id is a positive number
        if(id<1)
          {
            //ask user to enter positive number
            JOptionPane.showMessageDialog(null,
              "Invalid Id \n\n(ID is only Positive Numbers)",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
            
            //throw this exception
            throw new IllegalArgumentException("ID is only Positive Numbers");
          }
      }
    catch(java.lang.NumberFormatException e)
      {
        e.printStackTrace();
        //ask user to enter number
        JOptionPane.showMessageDialog(null,
          "Please enter number for location ID", "Invalid Input",
          JOptionPane.ERROR_MESSAGE);
        
        return false; //data is invalid
      }

        /** check validity of name */

        //name can't start with number or symbol
        if(!Character.isAlphabetic(nameText.getText().charAt(0)))
          {
            JOptionPane.showMessageDialog(null,
              "Invalid Name format\n\n(Name can't start with number or symbol)",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("Name can't start with number or symbol");

          }

        //check for all chars
        for(int i = 1; i<nameText.getText().length(); i++)
          {
            //code contain only letters/numbers and "_","."," ","-"
            if(!Character.isLetterOrDigit(nameText.getText().charAt(i))&&
              nameText.getText().charAt(i)!='_'&&
              nameText.getText().charAt(i)!=' ' &&
              nameText.getText().charAt(i)!='-' &&
              nameText.getText().charAt(i)!='.')
              {
                //show message to tell user  that
                JOptionPane.showMessageDialog(null,
                  "Invalid Name format\nName can't contain stranger symbols",
                  "Invalid Input", JOptionPane.ERROR_MESSAGE);
                //throw this exception
                throw new IllegalArgumentException("Name can't contain stranger symbols");
              }
         }
  
  
    /** Check validity of value **/
    try
      {
        float value = Float.parseFloat(valueText.getText());
        //Check for the entered value is a positive float number
        if(value<1)
          {
            //ask user enter positive number 
            JOptionPane.showMessageDialog(null,
              "Invalid value \n\n(Value is only Positive Number)",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
           
            //throw this exception
            throw new IllegalArgumentException("value is only Positive Number");
          }
      }
    catch(java.lang.NumberFormatException e) //if it is not a number
      {
        e.printStackTrace();
        
        //ask user to enter number
        JOptionPane.showMessageDialog(null,
          "Please, enter number for value.", "Invalid Input",
          JOptionPane.ERROR_MESSAGE);
        
        return false; //data is invalid
      }
      
        return true; //all data correct

      }
    
    // catch the illagal thrown exceptions
    catch(IllegalArgumentException e)
      {

        e.printStackTrace();
        return false; //data is invaild 
      }

    catch(Exception e)
      {
        e.printStackTrace();

        //if there is any other non expecting error
        JOptionPane.showMessageDialog(null,
          "Some Thing went wrong!\n\nPlease check your entered data. ",
          "Invalid Input", JOptionPane.ERROR_MESSAGE);
        return false; //data is invaild
      }
    
  }

  /**Upate an existing equipment specification*/
  private void update()
  {

    try
      {
        // check the data validity enterd by user using the defined checkValidity method
        if(checkValidity())
          {

            eq_spec = new EquipSpecificationDto(); //set new object
           
            // store data entered by user in dto object attributes
            eq_spec.setId(Integer.parseInt(IdText.getText()));
            eq_spec.setName(nameText.getText());
            eq_spec.setValue(valueText.getText());

            /* call update method from bao then show message if the process terminated successfully
               and repaint the table with the lateset updates */
            if(business.update(eq_spec, user))
              {

                //show message when process terminated successfully the reset 
                JOptionPane.showMessageDialog(null,
                  "Specification Updated Successfully");
                
                //repaint data with lateset updates
                setTableModel(business.listAll());
                EqSpecificationTable.repaint();
              }
            else
              {
                JOptionPane.showMessageDialog(null,
                  "This specification doesn't exist", "Done", 0);
              }

          }
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel CodeLabel;
  private javax.swing.JPanel EditPanel;
  private javax.swing.JTable EqSpecificationTable;
  private javax.swing.JLabel IdLabel;
  private javax.swing.JTextField IdText;
  private javax.swing.JButton Save;
  private javax.swing.JButton clear;
  private javax.swing.JPanel clearPanel;
  private javax.swing.JButton deleteButton;
  private javax.swing.JPanel deletePanel;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator2;
  private javax.swing.JTextField nameText;
  private java.awt.Label no_of_rows;
  private javax.swing.JButton refreshButton;
  private javax.swing.JPanel refreshPanel;
  private javax.swing.JPanel savePanel;
  private javax.swing.JButton searchButton;
  private javax.swing.JPanel searchPanel;
  private javax.swing.JTextField searchText;
  private javax.swing.JTextField valueText;
  // End of variables declaration//GEN-END:variables

}
